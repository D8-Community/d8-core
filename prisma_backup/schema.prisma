generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model Account {
  id                String  @id
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String?
  access_token      String?
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String?
  session_state     String?
  User              User    @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model Event {
  id        String   @id
  name      String
  date      DateTime
  link      String
  latitude  Float
  longitude Float
  createdAt DateTime @default(now())
  updatedAt DateTime
  creatorId String
  User      User     @relation(fields: [creatorId], references: [id])
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model Note {
  title     String
  content   String
  createdAt DateTime @default(now())
  updatedAt DateTime
  userId    String
  id        Int      @id
  User      User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model Session {
  id           String   @id
  sessionToken String   @unique
  userId       String
  expires      DateTime
  User         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model User {
  id            String         @id @unique
  email         String         @unique
  name          String?
  image         String?
  emailVerified DateTime?
  password      String?
  Account       Account[]
  Event         Event[]
  Note          Note[]
  Session       Session[]
  Project       Project[]
  Organization  Organization[]
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}

model Project {
  id          String   @id @default(uuid())
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  name        String
  description String
  userId      String
  type        String
  User        User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model Organization {
  id        String   @id @default(uuid())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  name      String
  website   String
  phone     String
  email     String
  userId    String
  User      User     @relation(fields: [userId], references: [id], onDelete: NoAction)
}
